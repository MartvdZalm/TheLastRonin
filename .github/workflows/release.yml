name: Build and Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install aqtinstall
        run: |
          python -m pip install --upgrade pip
          pip install aqtinstall==3.1.*

      - name: List available Qt versions and architectures
        run: |
          aqt list-qt windows desktop
          aqt list-qt windows desktop --arch 6.8.0

      - name: Install Qt
        run: |
          aqt install-qt windows desktop 6.8.0 win64_msvc2022_64 -m qtmultimedia --outputdir ${{ github.workspace }}/Qt

      - name: List available tools
        run: |
          aqt list-tool windows desktop

      - name: Install Qt Tools (Optional - only if available)
        run: |
          # Try to install OpenSSL if available
          aqt install-tool windows desktop tools_openssl_x64 --outputdir ${{ github.workspace }}/Qt || echo "OpenSSL tools not available"
        continue-on-error: true

      - name: Set Qt Environment Variables
        run: |
          echo "QT_ROOT=${{ github.workspace }}/Qt/6.8.0/msvc2022_64" >> $GITHUB_ENV
          echo "Qt6_DIR=${{ github.workspace }}/Qt/6.8.0/msvc2022_64/lib/cmake/Qt6" >> $GITHUB_ENV
          echo "${{ github.workspace }}/Qt/6.8.0/msvc2022_64/bin" >> $GITHUB_PATH

      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH="${{ github.workspace }}/Qt/6.8.0/msvc2022_64"

      - name: Clean Build Directory
        run: |
          if (Test-Path "build") { Remove-Item -Recurse -Force "build" }

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 17 2022" -A x64 -DCMAKE_PREFIX_PATH="${{ github.workspace }}/Qt/6.8.0/msvc2022_64"

      - name: Build Project
        run: |
          cmake --build build --config Release

      - name: Verify Build Output
        run: |
          if (!(Test-Path "build/Release/TheLastRonin.exe")) { 
            Write-Error "Build failed - executable not found"
            exit 1
          }
          Write-Output "Build successful - executable found"

      - name: Create Deployment Directory
        run: |
          New-Item -ItemType Directory -Force -Path "deploy"
          Copy-Item "build/Release/TheLastRonin.exe" -Destination "deploy/"

      - name: Deploy Qt Dependencies
        run: |
          & "${{ github.workspace }}/Qt/6.8.0/msvc2022_64/bin/windeployqt.exe" --release --no-translations --no-system-d3d-compiler "deploy/TheLastRonin.exe"

      - name: Create Portable Package
        run: |
          New-Item -ItemType Directory -Force -Path "TheLastRonin-Windows-Portable"
          Copy-Item "deploy/*" -Destination "TheLastRonin-Windows-Portable/" -Recurse -Force

          @"
          The Last Ronin - Portable Version

          Simply run TheLastRonin.exe to start the application.
          No installation required!
          "@ | Out-File -FilePath "TheLastRonin-Windows-Portable/README.txt" -Encoding UTF8
                    
          Compress-Archive -Path "TheLastRonin-Windows-Portable" -DestinationPath "TheLastRonin-Windows-Portable.zip" -Force

      - name: Install Inno Setup
        run: |
          choco install innosetup -y

      - name: Create Windows Installer (if setup script exists)
        run: |
          if (Test-Path "TheLastRonin.iss") {
            & "C:/Program Files (x86)/Inno Setup 6/ISCC.exe" "TheLastRonin.iss"
          } else {
            Write-Output "Inno Setup script not found, skipping installer creation"
          }
        continue-on-error: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-releases
          path: |
            TheLastRonin-Windows-Portable.zip
            TheLastRonin-Windows-Setup.exe
          if-no-files-found: warn
